{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sami\\\\Documents\\\\Files\\\\chat-app\\\\client\\\\src\\\\components\\\\Chat\\\\Chat.js\";\nimport React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport './Chat.css';\nimport InfoBar from '../InfoBar/InfoBar';\nimport Input from '../Input/Input';\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const ENDPOINT = 'localhost:5000';\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    socket = io(ENDPOINT);\n    setName(name);\n    setRoom(room);\n    socket.emit('join', {\n      name,\n      room\n    }, () => {});\n    return () => {\n      socket.emit('disconnect');\n      socket.off();\n    };\n  }, [ENDPOINT, location.search]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages([...messages, message]);\n    });\n  }, [messages]); //function for sending messages\n\n  const sendMessage = event => {\n    event.preventDefault();\n\n    if (message) {\n      socket.emit('sendMessage', message, () => setMessage(''));\n    }\n  };\n\n  console.log(message, messages);\n  return React.createElement(\"div\", {\n    className: \"outerContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(InfoBar, {\n    room: room,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    message: message,\n    setMessage: setMessage,\n    sendMessage: sendMEssage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })));\n};\n\nexport default Chat;","map":{"version":3,"sources":["C:/Users/Sami/Documents/Files/chat-app/client/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","InfoBar","Input","socket","Chat","location","name","setName","room","setRoom","message","setMessage","messages","setMessages","ENDPOINT","parse","search","emit","off","on","sendMessage","event","preventDefault","console","log","sendMEssage"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf;AAEA,OAAO,YAAP;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,IAAIC,MAAJ;;AAGA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AACzB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMiB,QAAQ,GAAG,gBAAjB;AACJhB,EAAAA,SAAS,CAAE,MAAM;AACb,UAAM;AAACQ,MAAAA,IAAD;AAAOE,MAAAA;AAAP,QAAeT,WAAW,CAACgB,KAAZ,CAAkBV,QAAQ,CAACW,MAA3B,CAArB;AAEAb,IAAAA,MAAM,GAAGH,EAAE,CAACc,QAAD,CAAX;AACCP,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAL,IAAAA,MAAM,CAACc,IAAP,CAAY,MAAZ,EAAoB;AAAEX,MAAAA,IAAF;AAAQE,MAAAA;AAAR,KAApB,EAAmC,MAAM,CAExC,CAFD;AAIA,WAAQ,MAAM;AACVL,MAAAA,MAAM,CAACc,IAAP,CAAY,YAAZ;AACAd,MAAAA,MAAM,CAACe,GAAP;AACH,KAHD;AAIJ,GAdQ,EAcN,CAACJ,QAAD,EAAWT,QAAQ,CAACW,MAApB,CAdM,CAAT;AAgBAlB,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,MAAM,CAACgB,EAAP,CAAU,SAAV,EAAsBT,OAAD,IAAa;AAC9BG,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAaF,OAAb,CAAD,CAAX;AACH,KAFD;AAGH,GAJQ,EAIN,CAACE,QAAD,CAJM,CAAT,CAtB6B,CA4B7B;;AACA,QAAMQ,WAAW,GAAIC,KAAD,IAAW;AAC3BA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAGZ,OAAH,EAAY;AACRP,MAAAA,MAAM,CAACc,IAAP,CAAY,aAAZ,EAA2BP,OAA3B,EAAoC,MAAMC,UAAU,CAAC,EAAD,CAApD;AACH;AACJ,GALD;;AAOAY,EAAAA,OAAO,CAACC,GAAR,CAAYd,OAAZ,EAAqBE,QAArB;AACI,SACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,OAAD;AAAU,IAAA,IAAI,EAAEJ,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAGG;AAAO,IAAA,OAAO,EAAEE,OAAhB;AAAyB,IAAA,UAAU,EAAEC,UAArC;AAAiD,IAAA,WAAW,EAAEc,WAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHH,CADJ,CADJ;AASH,CA9CD;;AAgDA,eAAerB,IAAf","sourcesContent":["import React, {useState, useEffect } from 'react';\r\nimport queryString from 'query-string';\r\nimport io from 'socket.io-client';\r\n\r\nimport './Chat.css';\r\nimport InfoBar from '../InfoBar/InfoBar'; \r\nimport Input from '../Input/Input'; \r\nlet socket;\r\n\r\n\r\nconst Chat = ({location}) => {\r\n    const [name, setName] = useState('');\r\n    const [room, setRoom] = useState('');\r\n    const [message, setMessage] = useState(''); \r\n    const [messages, setMessages] = useState([]); \r\n    const ENDPOINT = 'localhost:5000';\r\nuseEffect (() => {  \r\n    const {name ,room} = queryString.parse(location.search)\r\n\r\n    socket = io(ENDPOINT);\r\n     setName(name);\r\n     setRoom(room);\r\n     socket.emit('join', { name, room}, () => {\r\n         \r\n     });\r\n\r\n     return  () => {\r\n         socket.emit('disconnect');\r\n         socket.off();\r\n     }\r\n}, [ENDPOINT, location.search]);\r\n\r\nuseEffect(() => {\r\n    socket.on('message', (message) => {\r\n        setMessages([...messages,message]);\r\n    })\r\n}, [messages])\r\n\r\n//function for sending messages\r\nconst sendMessage = (event) => {\r\n    event.preventDefault();\r\n    if(message) {\r\n        socket.emit('sendMessage', message, () => setMessage(''));\r\n    }\r\n}\r\n\r\nconsole.log(message, messages);\r\n    return (\r\n        <div className=\"outerContainer\">\r\n            <div className=\"container\">\r\n                <InfoBar  room={room}/> \r\n\r\n               <input message={message} setMessage={setMessage} sendMessage={sendMEssage}/>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat;"]},"metadata":{},"sourceType":"module"}